{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Task 2 - View Assessment List",
  "steps": [
    {
      "file": "OCAT/client/App.jsx",
      "description": "# View Assessment List Issue\n\nMake sure you're starting on the master branch with your latest merged changes\n\n1. [Checkout master](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/managing-branches#switching-between-branches)\n2. [Pull down the most recent changes](https://github.com/git-guides/git-pull)",
      "line": 12
    },
    {
      "file": "OCAT/client/App.jsx",
      "selection": {
        "start": {
          "line": 13,
          "character": 9
        },
        "end": {
          "line": 13,
          "character": 19
        }
      },
      "description": "# React Router - /assessment/list\n\nClick the \"Insert Code\" button below to add the AssessmentList component in the App.jsx Site Router\n\n```jsx\n<Route path=\"/assessment/list\" component={AssessmentList} />\n```",
      "line": 13
    },
    {
      "file": "OCAT/client/pages/Assessments/AssessmentList.jsx",
      "description": "# Assessment List\n\nFirst, fetch the assessments that you've created on the back-end by using the `getList()` function in the Assessment Service @ [OCAT/client/services/AssessmentService.js](./OCAT/client/services/AssessmentService.js)",
      "line": 6
    },
    {
      "file": "OCAT/client/services/AssessmentService.js",
      "description": "# AssessmentService.getList()\n\nInside the `AssessmentService.getList()` function, send a GET request to the Express Router API @ `/api/assessment/list`\n\nThis will go to the back-end Express server @ [OCAT/server/routes/AssessmentAPI/index.js](./OCAT/server/routes/AssessmentAPI/index.js)",
      "line": 20
    },
    {
      "file": "OCAT/server/routes/AssessmentAPI/index.js",
      "description": "# Express Router - /api/assessment/list\n\nReceive the front-end axios request and call the `.getList()` function from the AssessmentService in [OCAT/server/libs/AssessmentService/index.js](./OCAT/server/libs/AssessmentService/index.js)",
      "line": 13
    },
    {
      "file": "OCAT/server/libs/AssessmentService/index.js",
      "description": "# Express Service\n\nSend a GET request to `/assessment/list` in [API/src/routes/Assessment/index.js](./API/src/routes/Assessment/index.js)",
      "line": 22
    },
    {
      "file": "API/src/routes/Assessment/index.js",
      "description": "# API Router - /assessment/list\n\nReceive the GET request from the front-end server and call the `.getList()` function from [API/src/microservices/Assessment-Service/index.js](./API/src/microservices/Assessment-Service/index.js)\n\nReturn assessment data to the front-end",
      "line": 34
    },
    {
      "file": "API/src/microservices/Assessment-Service/index.js",
      "description": "# Assessment Microservice\n\nUse Bookshelf to fetch the assessment data from the PostgreSQL database and return it to the front-end User Interface (UI).\n\nHINT: use Bookshelf's .fetchAll() function: https://bookshelfjs.org/api.html#Model-instance-fetchAll\n",
      "line": 18
    },
    {
      "file": "OCAT/client/pages/Assessments/AssessmentList.jsx",
      "description": "# Return Data\n\nReturn the assessment data all the way back to the front-end UI\n\nThe data will have to follow the same path in reverse back up:\n\nAPI/src/libs > API/src/routes > OCAT/server/libs > OCAT/server/routes > OCAT/client/services > OCAT/client/pages/Assessments/AssessmentList.jsx",
      "line": 10
    },
    {
      "file": "OCAT/client/pages/Assessments/AssessmentList.jsx",
      "description": "# Assessment List component\n\nNow that you have all the assessment data, construct an Assessment List table component using \"`react-table`\".\n\nInstall and implement `react-table` by following [the documentation](https://www.npmjs.com/package/react-table)",
      "line": 19
    },
    {
      "file": "OCAT/client/pages/Assessments/AssessmentList.jsx",
      "description": "# Finish Issue\n\n1. Test manually to make sure your table is working properly\n2. [Create a new branch](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/managing-branches#creating-a-branch)\n3. [Create a pull request into the \"master\" branch](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request)\n4. [Get someone to review your pull request](https://docs.github.com/en/github/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews)\n5. Once happy with your changes, [merge your pull request](https://docs.github.com/en/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request)\n6. Go to the next issue",
      "line": 21
    }
  ],
  "ref": "master"
}